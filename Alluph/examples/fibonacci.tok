0001  "function void _fibonacci(int target) do"
          [0001, 0008] (0000,          catFunction) {function}
          [0001, 0013] (0009,              catVoid) {void}
          [0001, 0024] (0042,             catFunId) {_fibonacci}
          [0001, 0024] (0010,             catOpPar) {(}
          [0001, 0028] (0004,               catInt) {int}
          [0001, 0035] (0043,                catId) {target}
          [0001, 0035] (0011,            catClsPar) {)}
          [0001, 0039] (0001,                catDo) {do}
0002  ""
0003  "    int a;"
          [0003, 0007] (0004,               catInt) {int}
          [0003, 0009] (0043,                catId) {a}
          [0003, 0009] (0019,           catSemiCol) {;}
0004  "    int b;"
          [0004, 0007] (0004,               catInt) {int}
          [0004, 0009] (0043,                catId) {b}
          [0004, 0009] (0019,           catSemiCol) {;}
0005  "    int next;"
          [0005, 0007] (0004,               catInt) {int}
          [0005, 0012] (0043,                catId) {next}
          [0005, 0012] (0019,           catSemiCol) {;}
0006  ""
0007  "    a = 1;"
          [0007, 0005] (0043,                catId) {a}
          [0007, 0006] (0030,             catOpeEq) {=}
          [0007, 0009] (0044,            catCteInt) {1}
          [0007, 0009] (0019,           catSemiCol) {;}
0008  "    b = 1;"
          [0008, 0005] (0043,                catId) {b}
          [0008, 0006] (0030,             catOpeEq) {=}
          [0008, 0009] (0044,            catCteInt) {1}
          [0008, 0009] (0019,           catSemiCol) {;}
0009  ""
0010  "    if target == 0 do "
          [0010, 0006] (0013,                catIf) {if}
          [0010, 0013] (0043,                catId) {target}
          [0010, 0014] (0030,             catOpeEq) {=}
          [0010, 0015] (0030,             catOpeEq) {=}
          [0010, 0018] (0044,            catCteInt) {0}
          [0010, 0021] (0001,                catDo) {do}
0011  "        return;"
          [0011, 0014] (0024,            carReturn) {return}
          [0011, 0014] (0019,           catSemiCol) {;}
0012  "    end"
          [0012, 0007] (0002,               catEnd) {end}
0013  "    "
0014  "    while next <= target do"
          [0014, 0009] (0014,             catWhile) {while}
          [0014, 0014] (0043,                catId) {next}
          [0014, 0015] (0036,            catOpeLte) {<=}
          [0014, 0024] (0043,                catId) {target}
          [0014, 0027] (0001,                catDo) {do}
0015  ""
0016  "        print(a ++ ", ");"
          [0016, 0013] (0022,             catPrint) {print}
          [0016, 0013] (0010,             catOpPar) {(}
          [0016, 0015] (0043,                catId) {a}
          [0016, 0016] (0025,           catOpeConc) {++}
          [0016, 0019] (0046,            catCteStr) {", "}
          [0016, 0023] (0011,            catClsPar) {)}
          [0016, 0024] (0019,           catSemiCol) {;}
0017  "        "
0018  "        next = a + b;"
          [0018, 0012] (0043,                catId) {next}
          [0018, 0013] (0030,             catOpeEq) {=}
          [0018, 0016] (0043,                catId) {a}
          [0018, 0017] (0037,            catOpeSum) {+}
          [0018, 0020] (0043,                catId) {b}
          [0018, 0020] (0019,           catSemiCol) {;}
0019  "        a = b;        "
          [0019, 0009] (0043,                catId) {a}
          [0019, 0010] (0030,             catOpeEq) {=}
          [0019, 0013] (0043,                catId) {b}
          [0019, 0013] (0019,           catSemiCol) {;}
0020  "        b = next;"
          [0020, 0009] (0043,                catId) {b}
          [0020, 0010] (0030,             catOpeEq) {=}
          [0020, 0016] (0043,                catId) {next}
          [0020, 0016] (0019,           catSemiCol) {;}
0021  ""
0022  "    end"
          [0022, 0007] (0002,               catEnd) {end}
0023  ""
0024  "    print(a);"
          [0024, 0009] (0022,             catPrint) {print}
          [0024, 0009] (0010,             catOpPar) {(}
          [0024, 0011] (0043,                catId) {a}
          [0024, 0011] (0011,            catClsPar) {)}
          [0024, 0012] (0019,           catSemiCol) {;}
0025  "    "
0026  "    return;"
          [0026, 0010] (0024,            carReturn) {return}
          [0026, 0010] (0019,           catSemiCol) {;}
0027  "end"
          [0027, 0003] (0002,               catEnd) {end}
0028  ""
0029  "function int _main() do"
          [0029, 0008] (0000,          catFunction) {function}
          [0029, 0012] (0004,               catInt) {int}
          [0029, 0018] (0042,             catFunId) {_main}
          [0029, 0018] (0010,             catOpPar) {(}
          [0029, 0019] (0011,            catClsPar) {)}
          [0029, 0023] (0001,                catDo) {do}
0030  ""
0031  "    int number;"
          [0031, 0007] (0004,               catInt) {int}
          [0031, 0014] (0043,                catId) {number}
          [0031, 0014] (0019,           catSemiCol) {;}
0032  "    int result;"
          [0032, 0007] (0004,               catInt) {int}
          [0032, 0014] (0043,                catId) {result}
          [0032, 0014] (0019,           catSemiCol) {;}
0033  ""
0034  "    read(number);"
          [0034, 0008] (0023,              catRead) {read}
          [0034, 0008] (0010,             catOpPar) {(}
          [0034, 0015] (0043,                catId) {number}
          [0034, 0015] (0011,            catClsPar) {)}
          [0034, 0016] (0019,           catSemiCol) {;}
0035  ""
0036  "    result = _fibonacci(number);"
          [0036, 0010] (0043,                catId) {result}
          [0036, 0011] (0030,             catOpeEq) {=}
          [0036, 0023] (0042,             catFunId) {_fibonacci}
          [0036, 0023] (0010,             catOpPar) {(}
          [0036, 0030] (0043,                catId) {number}
          [0036, 0030] (0011,            catClsPar) {)}
          [0036, 0031] (0019,           catSemiCol) {;}
0037  ""
0038  "    return 0;"
          [0038, 0010] (0024,            carReturn) {return}
          [0038, 0012] (0044,            catCteInt) {0}
          [0038, 0012] (0019,           catSemiCol) {;}
0039  ""
0040  "end"
          [0040, 0003] (0002,               catEnd) {end}
          [0040, 0005] (0048,               catEOF) {EOF}
